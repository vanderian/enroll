apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'net.ltgt.errorprone'
apply plugin: 'com.jakewharton.hugo'
// discover dependency current versions ./gradlew dependencyUpdates -Drevision=release
apply plugin: 'com.github.ben-manes.versions'
apply plugin: "de.mannodermaus.android-junit5"

apply from: rootProject.file("gradle/compile.gradle")
apply from: rootProject.file("gradle/android.gradle")

junitPlatform {
    filters {
        engines {
            include 'spek'
        }
    }
}

android {
    defaultConfig {
        applicationId "sk.vander.enroll"
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

kapt {
    correctErrorTypes = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation deps.appcompat_v7
    implementation deps.design
    implementation deps.constraint_layout
    implementation deps.lifecycle_ext
    kapt deps.lifecycle_compiler
    implementation deps.room
    implementation deps.room_rx
    kapt deps.room_compiler
    implementation deps.rxbindings_kt
    implementation deps.rxbindings_support_kt
    implementation deps.rxbindings_appcompat_kt
    implementation deps.rxbindings_design_kt
    implementation deps.rxbindings_recyclerview_kt
    kapt deps.butterknife_compiler
    implementation deps.picasso

    implementation deps.kotlin
    implementation deps.paperparcel
    implementation deps.paperparcel_kt
    kapt deps.paperparcel_compiler
    kapt deps.dagger_compiler
    kapt deps.dagger_android_compiler
    kapt deps.autodagger_compiler
    compileOnly deps.javax_annotations
    implementation deps.rx_location
    implementation deps.rx_permissions

    debugImplementation deps.leakcanary
    debugImplementation deps.blockcanary
    debugImplementation deps.stetho
    debugImplementation deps.stetho_okhttp
    debugImplementation deps.stetho_js

    testImplementation deps.kotlin_test
    testImplementation deps.kotlin_junit
    testImplementation deps.kluent
    testImplementation deps.mockito_kt
    testImplementation deps.spek_api
    testImplementation deps.spek_junit
    testImplementation deps.junit_platform
//    testImplementation deps.powermock_api
//    testImplementation deps.powermock_junit
    testImplementation junit5()
    testCompileOnly deps.junit5_runtime

    androidTestImplementation(deps.espresso, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    implementation project(':lib')
}

afterEvaluate {
    android.buildTypes.each {
        def name = it.name

        def copyTestTask = project.task(type: Copy, "copyKotlin${name.capitalize()}UnitTestClasses") {
            from "build/tmp/kotlin-classes/${name}UnitTest"
            into "build/intermediates/classes/test/$name"
        }
        project.tasks.getByName("compile${name.capitalize()}UnitTestKotlin").finalizedBy copyTestTask

        def copyMainTask = project.task(type: Copy, "copyKotlin${name.capitalize()}Classes") {
            from "build/tmp/kotlin-classes/${name}"
            into "build/intermediates/classes/$name"
        }
        project.tasks.getByName("compile${name.capitalize()}Kotlin").finalizedBy copyMainTask
    }
}

